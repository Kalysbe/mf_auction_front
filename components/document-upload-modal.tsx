"use client"

import { useState, useEffect } from "react"
import { Dialog, DialogContent, DialogHeader, DialogTitle } from "@/components/ui/dialog"
import { Button } from "@/components/ui/button"
import { Checkbox } from "@/components/ui/checkbox"
import { CheckCircle, Loader2, Upload, FileText, X } from "lucide-react"
import { tokenManager } from "@/lib/api"

const API_BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL || "https://mfauction.adb-solution.com"

interface DocumentType {
  id: string
  name: string
  required: boolean
}

interface UploadedDocument {
  id: string
  auction_id: string
  user_id: string
  file_type: string
  url: string
  createdAt: string
  updatedAt: string
  file_name?: string
}

interface DocumentUploadModalProps {
  isOpen: boolean
  onClose: () => void
  onDocumentsComplete: () => void
  auctionId: string
}

export function DocumentUploadModal({ isOpen, onClose, onDocumentsComplete, auctionId }: DocumentUploadModalProps) {
  const [documentTypes, setDocumentTypes] = useState<DocumentType[]>([])
  const [uploadedDocuments, setUploadedDocuments] = useState<UploadedDocument[]>([])
  const [loading, setLoading] = useState(false)
  const [uploading, setUploading] = useState<string | null>(null)
  const [responsibilityAccepted, setResponsibilityAccepted] = useState(false)
  const [documentsByType, setDocumentsByType] = useState<Record<string, UploadedDocument[]>>({})

  const fetchDocumentTypes = async () => {
    try {
      console.log("[v0] üîÑ –ó–∞–ø—Ä–æ—Å —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤...")
      console.log("[v0] üì° API URL:", `${API_BASE_URL}/file/type/list`)
      console.log("[v0] üîë Token:", tokenManager.getToken() ? "–ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç" : "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")

      const response = await fetch(`${API_BASE_URL}/file/type/list`, {
        headers: {
          Authorization: `Bearer ${tokenManager.getToken()}`,
          "Content-Type": "application/json",
        },
      })

      console.log("[v0] üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:", response.status)
      console.log("[v0] üìã Headers –æ—Ç–≤–µ—Ç–∞:", Object.fromEntries(response.headers.entries()))

      if (response.ok) {
        const types = await response.json()
        console.log("[v0] ‚úÖ –ü–æ–ª—É—á–µ–Ω—ã —Ç–∏–ø—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å –±—ç–∫–µ–Ω–¥–∞:")
        console.log("[v0] üìÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∏–ø–æ–≤:", types?.length || 0)
        console.log("[v0] üìù –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–≤–æ–≥–æ —Ç–∏–ø–∞:", types?.[0])
        console.log("[v0] üóÇÔ∏è –í—Å–µ —Ç–∏–ø—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:", types)

        const mappedTypes = types.map((type: any) => ({
          id: type.id,
          name: type.title,
          required: true,
        }))

        console.log("[v0] üîÑ –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Ç–∏–ø—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è UI:", mappedTypes)
        setDocumentTypes(mappedTypes || [])
      } else {
        console.error("[v0] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:", response.status)
        const errorText = await response.text()
        console.error("[v0] üìÑ –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏:", errorText)

        const fallbackTypes = [
          { id: "passport", name: "–ü–∞—Å–ø–æ—Ä—Ç", required: true },
          { id: "income_certificate", name: "–°–ø—Ä–∞–≤–∫–∞ –æ –¥–æ—Ö–æ–¥–∞—Ö", required: true },
          { id: "bank_statement", name: "–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –≤—ã–ø–∏—Å–∫–∞", required: true },
        ]
        console.log("[v0] üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback —Ç–∏–ø—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:", fallbackTypes)
        setDocumentTypes(fallbackTypes)
      }
    } catch (error) {
      console.error("[v0] üí• –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:", error)
      const fallbackTypes = [
        { id: "passport", name: "–ü–∞—Å–ø–æ—Ä—Ç", required: true },
        { id: "income_certificate", name: "–°–ø—Ä–∞–≤–∫–∞ –æ –¥–æ—Ö–æ–¥–∞—Ö", required: true },
        { id: "bank_statement", name: "–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –≤—ã–ø–∏—Å–∫–∞", required: true },
      ]
      console.log("[v0] üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback —Ç–∏–ø—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏:", fallbackTypes)
      setDocumentTypes(fallbackTypes)
    }
  }

  const fetchUserDocuments = async () => {
    try {
      console.log("[v0] üîÑ –ó–∞–ø—Ä–æ—Å –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∞—É–∫—Ü–∏–æ–Ω–∞...")
      console.log("[v0] üéØ Auction ID:", auctionId)
      console.log("[v0] üì° API URL:", `${API_BASE_URL}/file/auction/${auctionId}/files/`)
      console.log("[v0] üîë Token:", tokenManager.getToken() ? "–ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç" : "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")

      const response = await fetch(`${API_BASE_URL}/file/auction/${auctionId}/files/`, {
        headers: {
          Authorization: `Bearer ${tokenManager.getToken()}`,
          "Content-Type": "application/json",
        },
      })

      console.log("[v0] üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", response.status)
      console.log("[v0] üìã Headers –æ—Ç–≤–µ—Ç–∞:", Object.fromEntries(response.headers.entries()))

      if (response.ok) {
        const apiResponse = await response.json()
        console.log("[v0] ‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç API —Å –±—ç–∫–µ–Ω–¥–∞:")
        console.log("[v0] üìÑ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ API:", apiResponse)
        console.log("[v0] üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—É–∫—Ü–∏–æ–Ω–æ–≤ –≤ –æ—Ç–≤–µ—Ç–µ:", apiResponse?.length || 0)

        const allDocuments: UploadedDocument[] = []
        const grouped: Record<string, UploadedDocument[]> = {}

        if (Array.isArray(apiResponse) && apiResponse.length > 0) {
          // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É –∞—É–∫—Ü–∏–æ–Ω—É –≤ –æ—Ç–≤–µ—Ç–µ
          apiResponse.forEach((auction: any) => {
            console.log("[v0] üéØ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∞—É–∫—Ü–∏–æ–Ω:", auction.id, auction.asset)
            console.log("[v0] üìÅ –ì—Ä—É–ø–ø—ã —Ñ–∞–π–ª–æ–≤ –≤ –∞—É–∫—Ü–∏–æ–Ω–µ:", auction.files?.length || 0)

            if (auction.files && Array.isArray(auction.files)) {
              // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø–µ —Ñ–∞–π–ª–æ–≤ (–ø–æ —Ç–∏–ø–∞–º)
              auction.files.forEach((fileGroup: any) => {
                console.log("[v0] üìÇ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≥—Ä—É–ø–ø—É —Ñ–∞–π–ª–æ–≤ —Ç–∏–ø–∞:", fileGroup.file_type)
                console.log("[v0] üìÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤ –≤ –≥—Ä—É–ø–ø–µ:", fileGroup.files?.length || 0)

                if (fileGroup.files && Array.isArray(fileGroup.files)) {
                  // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –∏–∑ –≥—Ä—É–ø–ø—ã –≤ –æ–±—â–∏–π –º–∞—Å—Å–∏–≤
                  fileGroup.files.forEach((file: UploadedDocument) => {
                    console.log("[v0] üìé –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª:", file.id, file.file_type)
                    allDocuments.push(file)

                    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –ø–æ —Ç–∏–ø–∞–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                    if (!grouped[file.file_type]) {
                      grouped[file.file_type] = []
                    }
                    grouped[file.file_type].push(file)
                  })
                }
              })
            }
          })
        }

        console.log("[v0] üìã –í—Å–µ –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã:", allDocuments)
        console.log("[v0] üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:", allDocuments.length)
        console.log("[v0] üóÇÔ∏è –î–æ–∫—É–º–µ–Ω—Ç—ã —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ —Ç–∏–ø–∞–º:", grouped)

        setUploadedDocuments(allDocuments)
        setDocumentsByType(grouped)
      } else {
        console.error("[v0] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", response.status)
        const errorText = await response.text()
        console.error("[v0] üìÑ –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏:", errorText)

        setUploadedDocuments([])
        setDocumentsByType({})
      }
    } catch (error) {
      console.error("[v0] üí• –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", error)
      setUploadedDocuments([])
      setDocumentsByType({})
    }
  }

  const handleFileUpload = async (file: File, documentTypeId: string) => {
    if (!file) return

    const maxSize = 10 * 1024 * 1024 // 10MB –≤ –±–∞–π—Ç–∞—Ö
    if (file.size > maxSize) {
      alert(
        `–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 10MB. –†–∞–∑–º–µ—Ä –≤–∞—à–µ–≥–æ —Ñ–∞–π–ª–∞: ${(file.size / 1024 / 1024).toFixed(1)}MB`,
      )
      return
    }

    const allowedTypes = [
      "application/pdf",
      "application/msword",
      "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
    ]

    if (!allowedTypes.includes(file.type)) {
      alert("–†–∞–∑—Ä–µ—à–µ–Ω—ã —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã —Ñ–æ—Ä–º–∞—Ç–æ–≤ PDF –∏ Word (.doc, .docx)")
      return
    }

    const documentType = documentTypes.find((type) => type.id === documentTypeId)
    const documentTypeName = documentType ? documentType.name : documentTypeId

    setUploading(documentTypeId)
    const formData = new FormData()
    formData.append("file", file)
    formData.append("file_type", documentTypeName) // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤–º–µ—Å—Ç–æ ID
    formData.append("auction_id", auctionId)

    try {
      console.log("[v0] üì§ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞...")
      console.log("[v0] üìÑ –î–µ—Ç–∞–ª–∏ —Ñ–∞–π–ª–∞:", {
        name: file.name,
        type: file.type,
        size: `${(file.size / 1024 / 1024).toFixed(1)}MB`,
        documentTypeId,
        documentTypeName, // –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
        auctionId,
      })
      console.log("[v0] üì° API URL –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏:", `${API_BASE_URL}/file/create`)
      console.log("[v0] üîë Token:", tokenManager.getToken() ? "–ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç" : "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")

      console.log("[v0] üì¶ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ:")
      console.log("[v0] - file_type:", documentTypeName)
      console.log("[v0] - auction_id:", auctionId)
      console.log("[v0] - file:", file.name)

      const response = await fetch(`${API_BASE_URL}/file/create`, {
        method: "POST",
        headers: {
          Authorization: `Bearer ${tokenManager.getToken()}`,
        },
        body: formData,
      })

      console.log("[v0] üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:", response.status)
      console.log("[v0] üìã Headers –æ—Ç–≤–µ—Ç–∞:", Object.fromEntries(response.headers.entries()))

      if (response.ok) {
        const result = await response.json()
        console.log("[v0] ‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!")
        console.log("[v0] üìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≥—Ä—É–∑–∫–∏:", result)

        console.log("[v0] üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏...")
        await fetchUserDocuments()
      } else {
        const errorText = await response.text()
        console.error("[v0] ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:", response.status)
        console.error("[v0] üìÑ –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏:", errorText)

        if (response.status === 413) {
          alert("–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–º–µ–Ω—å—à–∏—Ç–µ —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –¥–æ 10MB –∏–ª–∏ –º–µ–Ω—å—à–µ.")
        } else {
          alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞ (–∫–æ–¥: ${response.status}). –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.`)
        }
      }
    } catch (error) {
      console.error("[v0] üí• –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞:", error)
      alert("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.")
    } finally {
      setUploading(null)
    }
  }

  const isDocumentUploaded = (documentType: string) => {
    const documentTypeName = documentTypes.find((type) => type.id === documentType)?.name || documentType
    return documentsByType[documentTypeName] && documentsByType[documentTypeName].length > 0
  }

  const checkDocumentsComplete = () => {
    const requiredTypeNames = documentTypes.filter((type) => type.required).map((type) => type.name)
    const uploadedTypeNames = Object.keys(documentsByType).filter((typeName) => documentsByType[typeName].length > 0)
    const allRequiredUploaded = requiredTypeNames.every((typeName) => uploadedTypeNames.includes(typeName))

    console.log("[v0] üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ—Å—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:")
    console.log("[v0] üìã –í—Å–µ —Ç–∏–ø—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:", documentTypes)
    console.log("[v0] ‚úÖ –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ç–∏–ø—ã (–Ω–∞–∑–≤–∞–Ω–∏—è):", requiredTypeNames)
    console.log("[v0] üì§ –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã (–Ω–∞–∑–≤–∞–Ω–∏—è):", uploadedTypeNames)
    console.log("[v0] üìä –î–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ —Ç–∏–ø–∞–º:", documentsByType)
    console.log("[v0] ‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:", allRequiredUploaded)
    console.log("[v0] ‚òëÔ∏è –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –ø—Ä–∏–Ω—è—Ç–∞:", responsibilityAccepted)

    return allRequiredUploaded
  }

  const handleParticipateClick = () => {
    console.log("[v0] üéØ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏–Ω—è–ª –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∏ –≥–æ—Ç–æ–≤ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∞—É–∫—Ü–∏–æ–Ω–µ")
    console.log("[v0] üìã –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:", checkDocumentsComplete())
    console.log("[v0] ‚òëÔ∏è –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –ø—Ä–∏–Ω—è—Ç–∞:", responsibilityAccepted)
    onDocumentsComplete()
  }

  const isReadyToParticipate = () => {
    return checkDocumentsComplete() && responsibilityAccepted
  }

  useEffect(() => {
    if (isOpen) {
      console.log("[v0] üöÄ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –æ—Ç–∫—Ä—ã—Ç–æ –¥–ª—è –∞—É–∫—Ü–∏–æ–Ω–∞:", auctionId)
      setLoading(true)
      setResponsibilityAccepted(false)
      Promise.all([fetchDocumentTypes(), fetchUserDocuments()]).finally(() => {
        setLoading(false)
        console.log("[v0] ‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
      })
    }
  }, [isOpen])

  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <DialogContent className="max-w-5xl max-h-[90vh] overflow-hidden bg-card">
        <DialogHeader className="pb-6 border-b border-border">
          <DialogTitle className="text-2xl font-bold text-foreground flex items-center gap-3">
            <div className="p-2 bg-primary/10 rounded-lg">
              <FileText className="h-6 w-6 text-primary" />
            </div>
            –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ –∞—É–∫—Ü–∏–æ–Ω–µ
          </DialogTitle>
        </DialogHeader>

        {loading ? (
          <div className="flex items-center justify-center py-16">
            <div className="text-center space-y-4">
              <Loader2 className="h-12 w-12 animate-spin text-primary mx-auto" />
              <p className="text-muted-foreground text-lg">–ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö...</p>
            </div>
          </div>
        ) : (
          <div className="overflow-y-auto max-h-[calc(90vh-200px)]">
            <div className="space-y-6 p-1">
              <div className="bg-muted/50 p-4 rounded-lg border border-border">
                <p className="text-sm text-muted-foreground leading-relaxed">
                  –ó–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ –∞—É–∫—Ü–∏–æ–Ω–µ. –ü—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã —Ñ–æ—Ä–º–∞—Ç–æ–≤{" "}
                  <span className="font-semibold text-primary">PDF</span> –∏{" "}
                  <span className="font-semibold text-primary">Word (.doc, .docx)</span>. –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ
                  —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞.
                </p>
              </div>

              <div className="space-y-4">
                {documentTypes.map((docType) => (
                  <div
                    key={docType.id}
                    className="bg-card border border-border rounded-xl p-6 shadow-sm hover:shadow-md transition-shadow"
                  >
                    <div className="flex items-center justify-between mb-4">
                      <div className="flex items-center gap-3">
                        <div
                          className={`p-2 rounded-lg ${isDocumentUploaded(docType.id) ? "bg-green-100" : "bg-muted"}`}
                        >
                          {isDocumentUploaded(docType.id) ? (
                            <CheckCircle className="h-5 w-5 text-green-600" />
                          ) : (
                            <FileText className="h-5 w-5 text-muted-foreground" />
                          )}
                        </div>
                        <div>
                          <h3 className="font-semibold text-foreground text-lg">
                            {docType.name}
                            {docType.required && <span className="text-destructive ml-1">*</span>}
                          </h3>
                          {isDocumentUploaded(docType.id) && (
                            <p className="text-sm text-green-600 font-medium">
                              –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {documentsByType[docType.name]?.length || 0}
                            </p>
                          )}
                        </div>
                      </div>
                    </div>

                    {documentsByType[docType.name] && documentsByType[docType.name].length > 0 && (
                      <div className="mb-4 space-y-2">
                        {documentsByType[docType.name].map((doc, index) => (
                          <div
                            key={doc.id}
                            className="flex items-center gap-2 p-2 bg-green-50 rounded-lg border border-green-200"
                          >
                            <CheckCircle className="h-4 w-4 text-green-600 flex-shrink-0" />
                            <span className="text-sm text-green-800 truncate">
                              {doc.file_name || `–î–æ–∫—É–º–µ–Ω—Ç ${index + 1}`}
                            </span>
                          </div>
                        ))}
                      </div>
                    )}

                    <div className="relative">
                      <input
                        type="file"
                        accept=".pdf,.doc,.docx"
                        onChange={(e) => {
                          const file = e.target.files?.[0]
                          if (file) {
                            handleFileUpload(file, docType.id)
                          }
                        }}
                        disabled={uploading === docType.id}
                        className="absolute inset-0 w-full h-full opacity-0 cursor-pointer disabled:cursor-not-allowed"
                        id={`file-${docType.id}`}
                      />
                      <label
                        htmlFor={`file-${docType.id}`}
                        className={`
                          flex items-center justify-center gap-3 p-4 border-2 border-dashed rounded-lg cursor-pointer transition-all
                          ${
                            uploading === docType.id
                              ? "border-muted-foreground bg-muted cursor-not-allowed"
                              : "border-primary/30 hover:border-primary bg-primary/5 hover:bg-primary/10"
                          }
                        `}
                      >
                        {uploading === docType.id ? (
                          <>
                            <Loader2 className="h-5 w-5 animate-spin text-muted-foreground" />
                            <span className="text-muted-foreground font-medium">–ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...</span>
                          </>
                        ) : (
                          <>
                            <Upload className="h-5 w-5 text-primary" />
                            <span className="text-primary font-medium">
                              {isDocumentUploaded(docType.id)
                                ? "–î–æ–±–∞–≤–∏—Ç—å –µ—â–µ —Ñ–∞–π–ª"
                                : "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –∏–ª–∏ –ø–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Å—é–¥–∞"}
                            </span>
                          </>
                        )}
                      </label>
                    </div>

                    <p className="text-xs text-muted-foreground mt-2 text-center">
                      –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: PDF, DOC, DOCX ‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 10MB
                    </p>
                  </div>
                ))}
              </div>

              {checkDocumentsComplete() && (
                <div className="bg-gradient-to-r from-green-50 to-emerald-50 border border-green-200 rounded-xl p-6 shadow-sm">
                  <div className="flex items-center gap-3 mb-6">
                    <div className="p-2 bg-green-100 rounded-lg">
                      <CheckCircle className="h-6 w-6 text-green-600" />
                    </div>
                    <div>
                      <h3 className="text-lg font-semibold text-green-800">–í—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã!</h3>
                      <p className="text-sm text-green-600">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è</p>
                    </div>
                  </div>

                  <div className="bg-white/70 rounded-lg p-4 mb-6">
                    <div className="flex items-start gap-3">
                      <Checkbox
                        id="responsibility"
                        checked={responsibilityAccepted}
                        onCheckedChange={(checked) => setResponsibilityAccepted(checked === true)}
                        className="mt-1 data-[state=checked]:bg-green-600 data-[state=checked]:border-green-600"
                      />
                      <label htmlFor="responsibility" className="text-sm text-gray-700 leading-relaxed cursor-pointer">
                        –Ø –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é, —á—Ç–æ –≤—Å–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã —è–≤–ª—è—é—Ç—Å—è –ø–æ–¥–ª–∏–Ω–Ω—ã–º–∏ –∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏. –Ø –±–µ—Ä—É –Ω–∞ —Å–µ–±—è
                        –ø–æ–ª–Ω—É—é –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ
                        –ª–æ–∂–Ω—ã—Ö —Å–≤–µ–¥–µ–Ω–∏–π –º–æ–∂–µ—Ç –ø–æ–≤–ª–µ—á—å –∑–∞ —Å–æ–±–æ–π –ø—Ä–∞–≤–æ–≤—ã–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è.
                      </label>
                    </div>
                  </div>

                  <Button
                    onClick={handleParticipateClick}
                    disabled={!responsibilityAccepted}
                    className="w-full bg-green-600 hover:bg-green-700 text-white font-semibold py-3 text-lg shadow-md hover:shadow-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed"
                  >
                    <CheckCircle className="h-5 w-5 mr-2" />
                    –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∞—É–∫—Ü–∏–æ–Ω–µ
                  </Button>
                </div>
              )}
            </div>
          </div>
        )}

        <div className="flex justify-end gap-3 pt-6 border-t border-border">
          <Button variant="outline" onClick={onClose} className="px-6 bg-transparent">
            <X className="h-4 w-4 mr-2" />
            –ó–∞–∫—Ä—ã—Ç—å
          </Button>
        </div>
      </DialogContent>
    </Dialog>
  )
}
